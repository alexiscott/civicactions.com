{"version":3,"sources":["webpack:///./src/pages/Communities.js","webpack:///./src/components/atoms/SectionTitle.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/Teaser.js","webpack:///./src/components/medium-components/mediumSinglePost.js","webpack:///./src/components/medium-components/mediumPosts.js","webpack:///./src/components/medium-components/mediumPostList.js"],"names":["_ref","data","markdownRemark","allMediumPost","frontmatter","title","subtitle","agile_intro_text","dkan_intro_text","agl_logo","dkan_logo","group","mediumAGL","lodash__WEBPACK_IMPORTED_MODULE_1___default","a","first","edges","AGLPosts","map","post","index","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","_components_medium_components_mediumPostList__WEBPACK_IMPORTED_MODULE_6__","posts","aglLogo","childImageSharp","resolutions","mediumDKAN","last","DKANPosts","dkanLogo","_components_layouts_GeneralLayout__WEBPACK_IMPORTED_MODULE_5__","heroTitle","heroSubtitle","className","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","_components_atoms_SectionTitle__WEBPACK_IMPORTED_MODULE_3__","_components_atoms_Buttons__WEBPACK_IMPORTED_MODULE_4__","button_text","link","isExternal","communitiesQuery","__webpack_exports__","sectionSubtitle","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","284","t","n","r","teaser_text","teaserDate","teaserImage","teaserTitle","teaserText","teaserLink","teaserClass","teaser_class","teaserType","image_wrapper","src","alt","href","300","s","i","c","MediumSinglePost","single","mediumLink","uniqueSlug","mediumDate","createdAt","mediumTitle","react_default","Teaser","mediumPosts","lodash_default","key","node","article"],"mappings":"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","file":"component---src-pages-communities-js-5de233eed3922176c178.js","sourcesContent":["import React from \"react\"\nimport _ from 'lodash'\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport SectionTitle from '../components/atoms/SectionTitle'\nimport Button from '../components/atoms/Buttons'\nimport GeneralLayout from \"./../components/layouts/GeneralLayout\"\nimport MediumPostList from '../components/medium-components/mediumPostList'\n\n\nconst Communities = ({ data }) => {\n  const{ markdownRemark, allMediumPost } = data;\n  const { frontmatter } = markdownRemark;\n  const { title, subtitle, agile_intro_text, dkan_intro_text,agl_logo, dkan_logo } = frontmatter;\n\n  const { group } = allMediumPost;\n\n  // @todo Test if this will consistently return the AGL group of posts first.\n  // It may be better to filter with JS using specified homeCollection ID's.\n\n  let mediumAGL = _.first(group, (edges) => {\n    return edges\n  });\n\n  let AGLPosts = _.map(mediumAGL, (post, index) => {\n    return <MediumPostList posts = {{ post }} />\n  });\n\n  let aglLogo = agl_logo ? agl_logo.childImageSharp.resolutions: '';\n\n\n  let mediumDKAN = _.last(group, (edges) => {\n    return edges;\n  });\n\n  let DKANPosts = _.map(mediumDKAN, (post, index) => {\n    return <MediumPostList posts = {{ post }} />\n  });\n  let dkanLogo = dkan_logo ? dkan_logo.childImageSharp.resolutions: '';\n\n\n  return(\n    <GeneralLayout\n      heroTitle = { title }\n      heroSubtitle = { subtitle }\n    >\n\n      {/* The Recent AGL Posts from Medium Section.*/}\n      <section className = \"section section__recent-posts\">\n        <div className = \"usa-grid community__wrapper\">\n          <span className = \"community__logo\"><Img resolutions = { aglLogo } /></span>\n          <SectionTitle\n            title = \"Agile Government Leadership\"\n            subtitle = { agile_intro_text }\n          />\n          { AGLPosts }\n        </div>\n        <div className = \"usa-grid\">\n          <Button\n            button_text = \"Visit AGL\"\n            link = \"https://medium.com/agile-government-leadership\"\n            isExternal = { true }\n          />\n        </div>\n      </section>\n\n      {/* The Recent DKAN Posts from Medium Section.*/}\n      <section className = \"section section__recent-posts right-flipped\">\n        <div className = \"usa-grid community__wrapper\">\n          <span className = \"community__logo dkan\"><Img resolutions = { dkanLogo } /></span>\n          <SectionTitle\n            title = \"DKAN Open Data Plaform\"\n            subtitle = { dkan_intro_text }\n          />\n          { DKANPosts }\n        </div>\n        <div className = \"usa-grid align-right\">\n          <Button\n            button_text = \"Visit DKAN\"\n            link = \"https://medium.com/dkan-blog\"\n            isExternal = { true }\n          />\n        </div>\n      </section>\n    </GeneralLayout>\n  );\n}\n\nexport default Communities;\n\nexport const communitiesQuery = graphql`\n  query communityPosts {\n   allMediumPost(filter: {approvedHomeCollectionId : { ne: \"b1968dbe7197\" }}) {\n    group(limit: 3, field: approvedHomeCollectionId) {\n      edges {\n        node {\n          title\n          createdAt\n          uniqueSlug\n        }\n      }\n    }\n  }\n\n  markdownRemark(frontmatter: {title :{ eq: \"Our Communities\"}}) {\n    frontmatter {\n      title\n      subtitle\n      agile_intro_text\n      dkan_intro_text\n      agl_logo {\n        childImageSharp {\n          resolutions(width: 67, height: 67) {\n          ...GatsbyImageSharpResolutions_withWebp\n          }\n        }\n      }\n      dkan_logo {\n        childImageSharp {\n          resolutions(width: 67, height: 67) {\n          ...GatsbyImageSharpResolutions_withWebp\n          }\n        }\n      }\n    }\n  }\n}\n`;\n","import React from \"react\";\n\nconst SectionTitle = ({title, subtitle}) => {\n  const sectionSubtitle = subtitle ? <p className = \"section__subtitle\">{ subtitle }</p>: '';\n\n  return(\n    <div className = \"section__title--wrapper\">\n      <h2 className = \"section__title\">{ title }</h2>\n      { sectionSubtitle }\n    </div>\n  );\n\n};\n\nexport default SectionTitle;","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import React from \"react\";\n\nconst Teaser = ({\n  teaserDate,\n  teaserImage,\n  teaserTitle,\n  teaserText,\n  teaserLink,\n  teaserClass,\n  teaserType\n  }) => {\n\n  let teaser_class = 'teaser';\n  let image_wrapper = '';\n  let teaser_text;\n\n  if(teaserClass) {\n    teaser_class = `teaser ${teaserClass}`;\n  }\n\n  if(teaserImage) {\n    image_wrapper = <div className = \"teaser__image--wrapper\">\n      <img src = {teaserImage} alt = { teaserTitle } />\n    </div>\n  }\n\n  if(teaserText) {\n    teaser_text = <p className = \"teaser__text\"> { teaserText } </p>\n  }\n\n  return (\n    <div className = { teaser_class }>\n      { image_wrapper }\n      <div className = \"teaser__date\"> { teaserDate } </div>\n      <h3 className =  \"teaser__title\"> { teaserTitle } </h3>\n      { teaser_text}\n      <div className = \"teaser__link\"> <a href = { teaserLink }>Read More</a> </div>\n    </div>\n  );\n};\n\nexport default Teaser;","import React from 'react';\nimport Teaser from '../Teaser';\n\n//This displays a single medium teaser\nexport default function MediumSinglePost({single}) {\n\n  let mediumLink = `https://medium.com/civicactions/${single.uniqueSlug}`;\n  let mediumDate = single.createdAt;\n  let mediumTitle = single.title;\n\n  return (\n      <Teaser\n        teaserDate = { mediumDate }\n        teaserTitle = { mediumTitle }\n        teaserLink = { mediumLink }\n      />\n  );\n\n}","import React from 'react';\nimport _ from 'lodash'\n\nimport MediumSinglePost from './mediumSinglePost';\n\nconst MediumPosts = ({data}) => {\n// Iterate over the second & third levels of Medium posts.\n  return(\n    _.map(data, (single) => {\n     return _.map(single, (last, index) => {\n        return (\n          <li  key = { index } className = \"medium--teaser__item teaser__item\">\n            <MediumSinglePost key = { index } single = {last.node} />\n          </li>\n        );\n      })\n    })\n  )\n};\n\nexport default MediumPosts;\n\n","import React from 'react';\nimport _ from 'lodash'\n\nimport MediumPosts from './mediumPosts';\n\nconst MediumPostList = ({ posts }) => {\n\n  // Iterate through the first level of the medium posts objects;\n  return (\n    _.map(posts, (article, index) => {\n\n      return (\n        <ul className = \"medium--teasers teaser--wrapper\">\n          <MediumPosts data = {{ article }} />\n        </ul>\n      )\n    })\n  )\n\n};\n\nexport default MediumPostList;"],"sourceRoot":""}